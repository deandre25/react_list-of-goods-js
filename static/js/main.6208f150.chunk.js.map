{"version":3,"sources":["GoodCard/index.js","GoodCard/GoodCard.jsx","GoodList/index.js","GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodCard","_ref","good","_jsx","children","GoodList","goods","map","goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","reversed","setReversed","visibleGoods","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","resetBtn","_jsxs","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAEeA,ECFS,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAC7BC,cAAA,MAAI,UAAQ,OAAMC,SACfF,KCAUG,ECAS,SAAHJ,GAAA,IAAMK,EAAKL,EAALK,MAAK,OAC9BH,cAAA,MAAAC,SACGE,EAAMC,KAAI,SAAAL,GAAI,OACbC,cAACH,EAAQ,CAACE,KAAMA,GAAWA,SCEpBM,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAgCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,EA5BR,SAA0BhB,EAAKL,GAA4B,IAAxBe,EAASf,EAATe,UAAWI,EAAQnB,EAARmB,SACtCG,EAAaC,YAAOlB,GAqB1B,OAnBIU,GACFO,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQX,GACN,KAAKP,EACH,OAAOiB,EAAME,cAAcD,GAE7B,KAAKjB,EACH,OAAOgB,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFG,EAAcO,UAGTP,EAMcQ,CACnBvB,EAAiB,CAAEQ,YAAWI,aAE1BY,EAAWhB,GAAaI,EAE9B,OACEa,eAAA,OAAKC,UAAU,kBAAiB9B,SAAA,CAC9B6B,eAAA,OAAKC,UAAU,UAAS9B,SAAA,CACtBD,cAAA,UACEgC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYpB,IAAcP,IAC9B4B,QAAS,kBAAMpB,EAAaR,IAAqBL,SAClD,wBAIDD,cAAA,UACEgC,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYpB,IAAcN,IAC9B2B,QAAS,kBAAMpB,EAAaP,IAAmBN,SAChD,mBAIDD,cAAA,UACEgC,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAahB,IACjBiB,QAAS,kBAAMhB,GAAaD,IAAUhB,SACvC,YAIA4B,GACC7B,cAAA,UACEgC,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPpB,EAAa,IACbI,GAAY,IACZjB,SACH,aAMLD,cAACE,EAAQ,CAACC,MAAOgB,QCjGvBgB,IAASC,OACPpC,cAACQ,EAAG,IACJ6B,SAASC,eAAe,W","file":"static/js/main.6208f150.chunk.js","sourcesContent":["import { GoodCard } from './GoodCard';\n\nexport default GoodCard;\n","export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import { GoodList } from './GoodList';\n\nexport default GoodList;\n","import GoodCard from '../GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport GoodList from './GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reversed },\n  );\n  const resetBtn = sortField || reversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reversed })}\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {resetBtn && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}